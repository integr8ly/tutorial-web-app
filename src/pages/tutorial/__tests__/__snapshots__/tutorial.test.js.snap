// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TutorialPage Component should render the ConnectedTutorialPage component 1`] = `
<Component
  getProgress={[Function]}
  getThread={[Function]}
  getWalkthrough={[Function]}
  thread={
    Object {
      "pending": true,
    }
  }
/>
`;

exports[`TutorialPage Component should render the TutorialPage component error state 1`] = `""`;

exports[`TutorialPage Component should render the TutorialPage component fulfilled state 1`] = `
<Fragment>
  <Page
    className=""
    header={null}
    sidebar={null}
  >
    <withRouter(Connect(Masthead)) />
    <PageSection
      className="integr8ly-landing-page-tutorial-dashboard-section pf-u-p-0"
      variant="light"
    >
      <Grid
        className="pf-c-content"
        gutter="md"
        lg={null}
        md={null}
        sm={null}
        span={null}
        xl={null}
      >
        <GridItem
          className="integr8ly-task-container pf-u-pt-xl pf-u-px-lg"
          lg={null}
          lgOffset={null}
          lgRowSpan={null}
          md={9}
          mdOffset={null}
          mdRowSpan={null}
          offset={null}
          rowSpan={null}
          sm={12}
          smOffset={null}
          smRowSpan={null}
          span={null}
          xl={null}
          xlOffset={null}
          xlRowSpan={null}
        >
          <div
            className="integr8ly-task-dashboard-header"
          >
            <h3>
              Example
            </h3>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="primary"
              disabled={false}
              onClick={[Function]}
            >
              tutorial.getStarted
            </Button>
          </div>
          <div
            dangerouslySetInnerHTML={
              Object {
                "__html": "<div class=\\"literalblock\\">
<div class=\\"content\\">
<pre>This is a sample description</pre>
</div>
</div>",
              }
            }
          />
        </GridItem>
        <GridItem
          className="integr8ly-module-frame pf-u-pt-xl pf-u-px-lg"
          lg={null}
          lgOffset={null}
          lgRowSpan={null}
          md={3}
          mdOffset={null}
          mdRowSpan={null}
          offset={null}
          rowSpan={2}
          sm={null}
          smOffset={null}
          smRowSpan={null}
          span={null}
          xl={null}
          xlOffset={null}
          xlRowSpan={null}
        >
          <Connect(WalkthroughResources)
            resources={Array []}
          />
        </GridItem>
        <GridItem
          className="pf-u-px-lg"
          lg={null}
          lgOffset={null}
          lgRowSpan={null}
          md={9}
          mdOffset={null}
          mdRowSpan={null}
          offset={null}
          rowSpan={null}
          sm={12}
          smOffset={null}
          smRowSpan={null}
          span={null}
          xl={null}
          xlOffset={null}
          xlRowSpan={null}
        >
          <h3
            className="pf-u-mt-xl"
          >
            tutorial.tasksToComplete
            <div
              className="pull-right integr8ly-task-dashboard-time-to-completion"
            >
              <Icon
                name="clock"
                style={
                  Object {
                    "marginRight": 5,
                  }
                }
                type="fa"
              />
              <span>
                0
                <span
                  className="integr8ly-task-dashboard-time-to-completion_minutes"
                >
                  tutorial.minutes
                </span>
              </span>
            </div>
          </h3>
          <ListView
            className="integr8ly-list-view-pf"
          />
          <div
            className="pull-right integr8ly-task-dashboard-time-to-completion pf-u-mb-lg"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="primary"
              disabled={false}
              onClick={[Function]}
            >
              tutorial.getStarted
            </Button>
          </div>
        </GridItem>
      </Grid>
    </PageSection>
  </Page>
</Fragment>
`;

exports[`TutorialPage Component should render the TutorialPage component pending state 1`] = `""`;
