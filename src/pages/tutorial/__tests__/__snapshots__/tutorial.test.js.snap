// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TutorialPage Component should render the ConnectedTutorialPage component 1`] = `
<Component
  getProgress={[Function]}
  getThread={[Function]}
  getWalkthrough={[Function]}
  getWalkthroughInfo={[Function]}
  thread={
    Object {
      "pending": true,
    }
  }
/>
`;

exports[`TutorialPage Component should render the TutorialPage component error state 1`] = `""`;

exports[`TutorialPage Component should render the TutorialPage component fulfilled state 1`] = `
<Fragment>
  <Page
    className="pf-u-h-100vh"
    defaultManagedSidebarIsOpen={true}
    isManagedSidebar={false}
    mainTabIndex={-1}
    onPageResize={[Function]}
  >
    <SkipToContent
      href="#main-content"
      show={false}
    >
      Skip to content
    </SkipToContent>
    <withRouter(Connect(Masthead)) />
    <Component
      variant="light"
    >
      <withRouter()
        homeClickedCallback={[Function]}
        isAllSolutionPattern={true}
        threadName="Example"
      />
    </Component>
    <Component
      className="integr8ly-landing-page-tutorial-dashboard-section"
    >
      <Component
        hasGutter={true}
      >
        <Component
          className="integr8ly-task-container"
          md={9}
          sm={12}
        >
          <Component
            className="integr8ly-c-card--content pf-u-p-lg pf-u-mb-xl"
          >
            <Component>
              <div
                className="integr8ly-task-dashboard-header"
              >
                <h1
                  id="main-content"
                >
                  Example
                </h1>
                <Component
                  aria-label="Get Started"
                  id="get-started-01"
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  tutorial.getStarted
                </Component>
              </div>
              <div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "<div class=\\"literalblock\\">
<div class=\\"content\\">
<pre>This is a sample description</pre>
</div>
</div>",
                  }
                }
              />
              <h2
                className="pf-u-mt-xl"
              >
                tutorial.tasksToComplete
                <div
                  className="pull-right pf-u-mr-lg integr8ly-task-dashboard-time-to-completion"
                >
                  <ClockIcon
                    className="pf-u-mr-xs"
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  />
                  0
                  <span
                    className="integr8ly-task-dashboard-time-to-completion_minutes"
                  >
                    tutorial.minutes
                  </span>
                </div>
              </h2>
              <Component
                aria-label="Task to complete this walkthrough"
                className="pf-u-pl-0"
                id="tasks-to-complete-walkthrough"
              />
              <div
                className="integr8ly-task-dashboard-time-to-completion pf-u-mb-lg"
              >
                <Component
                  aria-label="Get Started"
                  id="get-started-02"
                  onClick={[Function]}
                  type="button"
                  variant="primary"
                >
                  tutorial.getStarted
                </Component>
              </div>
            </Component>
          </Component>
        </Component>
        <Component
          className="integr8ly-module-frame pf-u-display-none pf-u-display-block-on-md"
          md={3}
          rowSpan={2}
        >
          <Connect(WalkthroughDetails)
            className="integr8ly-landing-page-tutorial-dashboard-section-right"
          />
          <Connect(WalkthroughResources)
            className="integr8ly-landing-page-tutorial-dashboard-section-right"
            resources={Array []}
          />
        </Component>
      </Component>
    </Component>
  </Page>
</Fragment>
`;

exports[`TutorialPage Component should render the TutorialPage component pending state 1`] = `""`;
