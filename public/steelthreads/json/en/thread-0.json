{
  "id": 0,
  "title": "Integrating two RESTful web services",
  "descriptionDoc": "thread-0-description.adoc",
  "prerequisites": [
  "Access to an OpenShift instance with Integreatly components installed",
  "A GitHub account configured with an OAuth App to use the Integreatly Launcher instance."
  ],
  "estimatedTime": 50,
  "roles": [
  "Operator",
  "Developer"
  ],
  "applications": [
  "Red Hat OpenShift Application Runtimes",
  "Eclipse Che",
  "Fuse Ignite",
  "EnMasse"
  ],
  "tasks": [
  {
  "title": "Creating an EnMasse space",
  "description": "EnMasse simplifies running messaging infrastructure for your organization. You use it to provide messaging services from a Node.js app to a Spring Boot app.",
  "estimatedTime": 6,
  "stepDoc": "setting-up-enmasse.adoc",
  "stepDocInfo": "complete-before-proceeding.adoc"
  },
  {
  "title": "Creating EnMasse Binding",
  "description": "To use EnMasse, you must create an OpenShift binding.",
  "estimatedTime": 5,
  "stepDoc": "creating-enmasse-binding.adoc",
  "stepDocInfo": "complete-before-proceeding.adoc",
  "attributes": {
  "launcher-url": "http://launcher-launcher.apps.city.openshiftworkshop.com/"
  }
  },
  {
  "title": "Creating addresses in EnMasse space",
  "description": "You create two addresses in EnMasse to route messages to the Spring Boot app.",
  "estimatedTime": 5,
  "stepDoc": "creating-addresses.adoc",
  "stepDocInfo": "complete-before-proceeding.adoc",
  "attributes": {
  "launcher-url": "http://launcher-launcher.apps.city.openshiftworkshop.com/"
  }
  },
  {
  "title": "Running a Node.js messaging app",
  "description": "The Red Hat Developer Launcher enables you to build and deploy applications on OpenShift. In this procedure, you deploy an example Node.js application that is pre-configured to provide a REST API that returns a list of fruit.",
  "estimatedTime": 5,
  "stepDoc": "running-node-app.adoc",
  "stepDocInfo": "complete-before-proceeding.adoc",
  "attributes": {
  "launcher-url": "http://launcher-launcher.apps.city.openshiftworkshop.com/"
  }
  },
  {
  "title": "Editing the Node.js messaging app",
  "description": "Che allows you edit the source code for your Node.js app in the browser.",
  "estimatedTime": 5,
  "stepDoc": "editing-node-app-with-che.adoc",
  "stepDocInfo": "complete-before-proceeding.adoc",
  "attributes": {
  "launcher-url": "http://launcher-launcher.apps.city.openshiftworkshop.com/"
  }
  },
  {
  "title": "Running a Spring Boot CRUD app",
  "description": "In this procedure, you deploy an example Spring Boot CRUD application that is pre-configured to act as a simple grocery inventory application.",
  "estimatedTime": 5,
  "stepDoc": "running-spring-app.adoc",
  "stepDocInfo": "complete-before-proceeding.adoc",
  "attributes": {
  "launcher-url": "http://launcher-launcher.apps.city.openshiftworkshop.com/"
  }
  },
  {
  "title": "Creating AMQP connection in Fuse Ignite",
  "description": "To receive messages from EnMasse, you must create a connection in Fuse Ignite.",
  "estimatedTime": 5,
  "stepDoc": "creating-amqp-connection-in-fuse.adoc",
  "stepDocInfo": "complete-before-proceeding.adoc"
  },
  {
  "title": "Creating HTTP connection in Fuse Ignite",
  "description": "To send messages to the Spring Boot app, you must create a connection in Fuse Ignite.",
  "estimatedTime": 6,
  "stepDoc": "creating-http-connection-in-fuse.adoc",
  "stepDocInfo": "complete-before-proceeding.adoc"
  },
  {
  "title": "Creating Integration in Fuse Ignite",
  "description": "To use the Fuse connections, you must create an integration in Fuse Ignite.",
  "estimatedTime": 5,
  "stepDoc": "creating-fuse-integration.adoc",
  "stepDocSuccess": "thread-0-success.adoc"
  },
  {
  "title": "Using the application integration",
  "description": "After setting up the integration between the Node.js and Spring Boot applications, we can use the integration to create a new fruit for the grocery inventory application.",
  "estimatedTime": 5,
  "stepDoc": "using-integration.adoc",
  "stepDocSuccess": "thread-0-success.adoc"
  }
  ]
  }
  
  // 20180903163703
  // https://raw.githubusercontent.com/integr8ly/tutorial-web-app/8921fd954396fe26445553ada441b186d8fa7ca3/public/steelthreads/json/en/thread-0.json
  â€‹
  {
    "id": 0,
    "title": "Integrating two RESTful web services",
    "descriptionDoc": "thread-0-description.adoc",
    "prerequisites": [
      "Access to an OpenShift instance with Integreatly components installed",
      "A GitHub account configured with an OAuth App to use the Integreatly Launcher instance."
    ],
    "estimatedTime": 50,
    "roles": [
      "Operator",
      "Developer"
    ],
    "applications": [
      "Red Hat OpenShift Application Runtimes",
      "Eclipse Che",
      "Fuse Ignite",
      "EnMasse"
    ],
    "tasks": [
      {
        "title": "Creating an EnMasse space",
        "description": "EnMasse simplifies running messaging infrastructure for your organization. You use it to provide messaging services from a Node.js app to a Spring Boot app.",
        "estimatedTime": 6,
        "stepDoc": "setting-up-enmasse.adoc",
        "stepDocInfo": "complete-before-proceeding.adoc"
      },
      {
        "title": "Creating EnMasse Binding",
        "description": "To use EnMasse, you must create an OpenShift binding.",
        "estimatedTime": 5,
        "stepDoc": "creating-enmasse-binding.adoc",
        "stepDocInfo": "complete-before-proceeding.adoc",
        "attributes": {
          "launcher-url": "http://launcher-launcher.apps.city.openshiftworkshop.com/"
        }
      },
  